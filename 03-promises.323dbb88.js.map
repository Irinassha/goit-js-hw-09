{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,WAGA,IAAMC,EAAcC,SAASC,cAAc,SAC3CC,QAAQC,IAAIJ,GAmBZA,EAAYK,iBAAiB,UAAU,SAAAC,G,kBASnC,IA1BmBC,EAAUC,EA0BvBC,EAAUC,EAAQC,EAAIC,GA1BTL,EA2BLI,EA3BeH,EA2BZC,EA1BZ,IAAII,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EACEM,EAAAtB,GAASuB,OAAOC,QAAQ,qBAAoCC,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,QAGpEO,EACEK,EAAAtB,GAASuB,OAAOG,QAAQ,oBAAmCD,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,O,GAGpEA,E,KAeAiB,MAAK,W,IAAClB,EAAQmB,UAAAC,OAAA,YAAAD,UAAA,GAAAA,UAAA,GAAGf,EAAGH,EAAKkB,UAAAC,OAAA,YAAAD,UAAA,GAAAA,UAAA,GAAGjB,EAC3BN,QAAQC,IAAI,uBAAwCmB,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,M,IAE3DoB,OAAM,W,IAACrB,EAAQmB,UAAAC,OAAA,YAAAD,UAAA,GAAAA,UAAA,GAAGf,EAAGH,EAAKkB,UAAAC,OAAA,YAAAD,UAAA,GAAAA,UAAA,GAAGjB,EAC5BN,QAAQC,IAAI,sBAAqCmB,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,M,KAd7DF,EAAEuB,iBAOF,IANA,IAAMC,EAAW,IAAIC,SAAS/B,GAExBU,GAASoB,EAASE,IAAI,SACtBpB,GAAQkB,EAASE,IAAI,QACrBC,GAAUH,EAASE,IAAI,UAEpBE,EAAI,EAAGA,EAAID,EAAQC,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formElement = document.querySelector('.form');\nconsole.log(formElement);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(\n          Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`)\n        );\n      } else {\n        reject(\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`)\n        );\n      }\n    }, delay);\n  });\n}\n\nformElement.addEventListener('submit', e => {\n  e.preventDefault();\n  const formData = new FormData(formElement);\n\n  const delay = +formData.get('delay');\n  const step = +formData.get('step');\n  const amount = +formData.get('amount');\n\n  for (let i = 0; i < amount; i++) {\n    const myDelay = delay + i * step;\n    createPromise(i, myDelay)\n      .then((position = i, delay = myDelay) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch((position = i, delay = myDelay) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formElement","document","querySelector","console","log","addEventListener","e","position","delay","myDelay","delay1","i","step","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","concat","failure","then","arguments","length","catch","preventDefault","formData","FormData","get","amount","i1","_loop"],"version":3,"file":"03-promises.323dbb88.js.map"}